#!/bin/bash
#
# Jerome.Blanchet@NetApp.com
# Simple Shell for Demo
#
# set -x
#
# Environment variiable setup
# KSHELL_CMDLSTFILE  : File containing the list of command to be executed during demo
# KSHELL_INDX       : Command line Index
version=0.1

BASENAME=`basename $0`
DIRNAME=`dirname $0`

PROMPT="#"
TMPEXFILE=/tmp/kshell_run.$$
TMPINDXFILE=/tmp/kshell_index.conf

[ -z $KSHELL_CMDLSTFILE ] && KSHELL_CMDLSTFILE=${DIRNAME}/kshell-listcmd.txt

clean_and_exit(){
	[ -f $TMPEXFILE ] && rm $TMPEXFILE 
	exit $1 
}

run_print() {
 	CMD=$1
   	stty -F /dev/tty -echo
 	echo -n $PROMPT ; echo -n " "
 	for i in $(seq 1 ${#CMD}); do
        	echo -n "${CMD:i-1:1}"
		if [ "${CMD:i-1:1}" == " " ] ; then 
        		sleep 0.08
		else 
        		sleep 0.06
		fi
 	done
 	echo -n " " ; read -u 1 ; echo
 	echo $CMD > $TMPEXFILE ; chmod +x $TMPEXFILE
 	$TMPEXFILE ; echo
   	stty -F /dev/tty echo
}

run_loop() {
	echo -n $PROMPT ; echo -n " "
	read -u 1 CMD
	#echo "DEBUG: CMD:[${CMD}]"
	while [ ! -z "$CMD" ]; do
		[ "$CMD" == "index" ] && CMD="echo $cmd_indx"
		[ "$CMD" == "next" ] && CMD="head -$cmd_indx $KSHELL_CMDLSTFILE | tail +$cmd_indx"
		[ "$CMD" == "list" ] && CMD="cat $KSHELL_CMDLSTFILE"
		if [ "$CMD" == "reset-index" ] ; then 
			cmd_indx=1
			CMD="echo $cmd_indx"
		fi
		if [ "$CMD" == "jump" ] ; then 
			cmd_indx=$(($cmd_indx + 1))
			CMD="echo $cmd_indx"
		fi
		if [ "$CMD" == "exit" ] ; then 
			echo "KSHELL_INDX=$cmd_indx" > $TMPINDXFILE
			clean_and_exit 0
		fi
		if [ "$CMD" == "exit-reset-index" ] ; then
			[ -f $TMPINDXFILE ] && rm $TMPINDXFILE
			clean_and_exit 0
		fi
 		echo $CMD > $TMPEXFILE; chmod +x $TMPEXFILE
 		$TMPEXFILE ; echo
		echo -n $PROMPT ;  echo -n " " 
 		read  -u 1 CMD
 	done
	return 0 
}

#
# MAIN
#

if [ ! -f $KSHELL_CMDLSTFILE ]; then
	echo "ERROR: KSHELL_CMDLSTFILE: $KSHELL_CMDLSTFILE no such file"
	clean_and_exit 0 
fi

[ -f $TMPINDXFILE ] && source $TMPINDXFILE
[ -z $KSHELL_INDX ] && KSHELL_INDX=1
cmd_indx=$KSHELL_INDX

while [ true ] ; do
        run_loop
	CMD=`head -$cmd_indx $KSHELL_CMDLSTFILE | tail +$cmd_indx`
 	run_print "$CMD"
	cmd_indx=$(($cmd_indx + 1))
done

[ -f $TMPINDXFILE ] && rm $TMPINDXFILE

clean_and_exit 0
