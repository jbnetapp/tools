#!/bin/bash
#
# Jerome.Blanchet@NetApp.com
# Simple Shell for Demo
#
# set -x
#
# Environment variiable setup
# KSHELL_CMDLSTFILE  : File containing the list of command to be executed during demo
# KSHELL_INDX       : Command line Index
version=0.1

BASENAME=`basename $0`
DIRNAME=`dirname $0`

PROMPT="#"
TMPEXFILE=/tmp/kshell_run.$$
TMPINDXFILE=/tmp/kshell_index.conf

print_help(){
	echo -e "NAME"
	echo -e "\t\tkshell - run a shell to simulate UNIX customer demo by simple to a return between each command"
	echo -e "\t\tSYNOPSIS"
	echo -e "\t\tkshell [OPTIONS]"
	echo
	echo -e "DESCRIPTION"
	echo -e "\t\t-f FILE: specify FILE containing list of command to execute during demo"
	echo -e "\t\t-z reset the command line index to the first command"
	echo -e "\t\t-h print Help "
	echo
	echo -e "SHELL GRAMMAR"
	echo -e "\t\tunix_command"
	echo -e "\t\t\tExecute any existing unix command"
	echo -e "\t\tlist"
	echo -e "\t\t\tPrint the command list to execute"
	echo -e "\t\tindex"
	echo -e "\t\t\tPrint the current index"
	echo -e "\t\tnext"
	echo -e "\t\t\tPrint the next command to execute"
	echo -e "\t\tjump"        
	echo -e "\t\t\tJump to the next command in the list"
	echo -e "\t\tback"        
	echo -e "\t\t\tBack to the preview command in the list"
	echo -e "\t\treset-index "
	echo -e "\t\t\treset the command line index to the first command"
	echo -e "\t\texit"
	echo -e "\t\t\texit kshell"
	echo -e "\t\texit-reset-index"
	echo -e "\t\t\texit kshell"
	echo -e "SHELL ENVIRONMENT VARIABLES"
	echo -e "\t\tKSHELL_CMDLSTFILE"
	echo -e "\t\t\tConfiguration File"
}

clean_and_exit(){
	[ -f $TMPEXFILE ] && rm $TMPEXFILE 
	exit $1 
}

run_print() {
 	CMD=$1
   	stty -F /dev/tty -echo
 	echo -n $PROMPT ; echo -n " "
 	for i in $(seq 1 ${#CMD}); do
        	echo -n "${CMD:i-1:1}"
		if [ "${CMD:i-1:1}" == " " ] ; then 
        		sleep 0.08
		else 
        		sleep 0.06
		fi
 	done
 	echo -n " " ; read -u 1 ; echo
 	echo $CMD > $TMPEXFILE ; chmod +x $TMPEXFILE
 	$TMPEXFILE ; echo
   	stty -F /dev/tty echo
}

run_loop() {
	echo -n $PROMPT ; echo -n " "
	read -u 1 CMD
	while [ ! -z "$CMD" ]; do
		[ "$CMD" == "index" ] && CMD="echo -n $cmd_indx"
		[ "$CMD" == "list" ] && CMD="cat $KSHELL_CMDLSTFILE"
		[ "$CMD" == "whoami" ] && CMD="echo -n $BASENAME"
		if [ "$CMD" == "next" ] ; then 
			next_command=`head -$cmd_indx $KSHELL_CMDLSTFILE | tail +$cmd_indx`
			CMD="echo -n $next_command"
		fi
		if [ "$CMD" == "help" ] ; then 
			print_help
			CMD="echo"
		fi
		if [ "$CMD" == "reset-index" ] ; then 
			cmd_indx=1
			CMD="echo -n $cmd_indx"
		fi
		if [ "$CMD" == "back" ] ; then 
			[ $cmd_indx -gt 1 ] && cmd_indx=$(($cmd_indx - 1))
			CMD="echo -n"
		fi
		if [ "$CMD" == "jump" ] ; then 
			cmd_indx=$(($cmd_indx + 1))
			CMD="echo -n"
		fi
		if [ "$CMD" == "exit" ] ; then 
			echo "KSHELL_INDX=$cmd_indx" > $TMPINDXFILE
			clean_and_exit 0
		fi
		if [ "$CMD" == "exit-reset-index" ] ; then
			[ -f $TMPINDXFILE ] && rm $TMPINDXFILE
			clean_and_exit 0
		fi
 		echo $CMD > $TMPEXFILE; chmod +x $TMPEXFILE
 		$TMPEXFILE ; echo
		echo -n $PROMPT ;  echo -n " " 
 		read  -u 1 CMD
 	done
	return 0 
}

#
# MAIN
#

[ -f $TMPINDXFILE ] && source $TMPINDXFILE

usage="usage kshell [-f filename] [-z] [-h]"
while getopts ":f:zh" o; do
	case ${o} in
		f)
			KSHELL_CMDLSTFILE=$OPTARG
			;;
		z)
			KSHELL_INDX=1
			;;
		h)
			print_help
			clean_and_exit 0
			;;
                *)
			echo "Error unknown option: $usage" 255
			clean_and_exit 1
			;;
                esac
done
shift $((OPTIND-1))

[ -z $KSHELL_CMDLSTFILE ] && KSHELL_CMDLSTFILE=${DIRNAME}/kshell-listcmd.txt

if [ ! -f $KSHELL_CMDLSTFILE ]; then
	echo "ERROR: KSHELL_CMDLSTFILE: $KSHELL_CMDLSTFILE no such file"
	clean_and_exit 0
fi

[ -z $KSHELL_INDX ] && KSHELL_INDX=1
cmd_indx=$KSHELL_INDX

while [ true ] ; do
        run_loop
	CMD=`head -$cmd_indx $KSHELL_CMDLSTFILE | tail +$cmd_indx`
 	run_print "$CMD"
	cmd_indx=$(($cmd_indx + 1))
done

[ -f $TMPINDXFILE ] && rm $TMPINDXFILE

clean_and_exit 0
