#!/bin/bash
#
# Simple Shell for Demo
# Jerome.Blanchet@NetApp.com
#
# Environment variiable setup
# KSHELL_CMDLSTFILE  : File containing the list of command to be executed during demo
#
version=0.1

BASENAME=`basename $0`
DIRNAME=`dirname $0`

[ -z "$KSHELL_PROMPT" ] && KSHELL_PROMPT="\e[1;32mkshell\e[0m # "
TMPCINDEXFILE=/tmp/kshell_index.txt
TMPHISTORY=/tmp/kshell_history.$$
TMPEXFILE=/tmp/kshell_run.$$

print_help(){
	echo -e ""
	echo -e "NAME"
	echo -e "\t\tkshell - run a shell to simulate UNIX customer demo by simple to a return between each command"
	echo -e "\t\tSYNOPSIS"
	echo -e "\t\tkshell [OPTIONS]"
	echo
	echo -e "DESCRIPTION"
	echo -e "\t\t-f FILE: specify FILE containing list of command to execute during demo"
	echo -e "\t\t-z reset the command line index to the first command"
	echo -e "\t\t-h print Help "
	echo -e ""
	echo -e "SHELL GRAMMAR"
	echo -e "\t\tunix_command"
	echo -e "\t\t\tExecute any existing unix command"
	echo -e "\t\tlist"
	echo -e "\t\t\tPrint the command list to execute"
	echo -e "\t\tindex"
	echo -e "\t\t\tPrint the current index"
	echo -e "\t\tnext"
	echo -e "\t\t\tPrint the next command to execute"
	echo -e "\t\tjump"        
	echo -e "\t\t\tJump to the next command in the list"
	echo -e "\t\tback"        
	echo -e "\t\t\tBack to the preview command in the list"
	echo -e "\t\treset-index "
	echo -e "\t\t\tReset the command line index to the first command"
	echo -e "\t\thistory"
	echo -e "\t\t\tDisplay history command Line"
	echo -e "\t\texit"
	echo -e "\t\t\tExit kshell"
	echo -e "\t\texit-reset-index"
	echo -e "\t\t\tExit kshell and reset the Command list index"
	echo -e ""
	echo -e "SHELL ENVIRONMENT VARIABLES"
	echo -e "\t\tKSHELL_CMDLSTFILE"
	echo -e "\t\t\tSpecify your default List Command File to execute during demo"
	echo -e "\t\tKSHELL_PROMPT"
	echo -e "\t\t\tSet your own prompt"
	echo -e ""
	echo -e "SEE ALSO"
	echo -e "\t\tFull documentation <https://github.com/jbnetapp>"
	echo -e ""
}

clean_and_exit(){
	[ -f $TMPEXFILE ] && rm $TMPEXFILE 
	[ -f $TMPHISTORY ] && rm $TMPHISTORY
	exit $1 
}

get_cmdline(){
	GETCMD=""
	while IFS="" read -u 1 -r -s -n1 c ; do
		echo -n "$c"
		((${#c}==0)) && break
		case "$c" in
			$'\177')
				if [ ${#GETCMD} -gt 0 ]; then
					GETCMD="${GETCMD::-1}"
					printf "\010\040\010\033[P"          # backspace
				fi
				continue;;
		esac
		GETCMD="${GETCMD}${c}"
	done
}

run_print() {
 	CMD=$1
	if [ -z "$CMD" ] ; then 
		echo ; return
	fi
	stty -F /dev/tty -echo
 	for i in $(seq 1 ${#CMD}); do
       		echo -n "${CMD:i-1:1}"
		if [ "${CMD:i-1:1}" == " " ] ; then 
       			sleep 0.08
		else 
       			sleep 0.06
		fi
 	done
 	echo -n " " ; read -u 1 ; echo
 	echo $CMD > $TMPEXFILE ; chmod +x $TMPEXFILE
 	$TMPEXFILE ;
	if [ $? -eq 0 ] ; then 
		hindex=$(($hindex + 1))
		echo -e "${hindex}\t${CMD}" >> $TMPHISTORY
	fi
   	stty -F /dev/tty echo
}

run_loop() {
	echo -n -e $KSHELL_PROMPT ; echo -n " "
	get_cmdline
	CMD="$GETCMD"
	while [ ! -z "$CMD" ]; do
		if [ "$CMD" == "index" ] ; then  
			echo ; echo $cindex; CMD=""
		fi
		if [ "$CMD" == "list" ] ; then  
			CMD="cat $KSHELL_CMDLSTFILE"
		fi
		if [ "$CMD" == "whoami" ] ; then 
			echo ; echo $BASENAME; CMD=""
		fi
		if [ "$CMD" == "history" ] ; then 
			echo ; cat $TMPHISTORY ; CMD=""
		fi
		if [ "$CMD" == "next" ] ; then 
			next_command=`head -$cindex $KSHELL_CMDLSTFILE | tail +$cindex`
			echo ; echo $next_command ; CMD=""
		fi
		if [ "$CMD" == "help" ] ; then 
			print_help
			echo; CMD=""
		fi
		if [ "$CMD" == "reset-index" ] ; then 
			cindex=1
			echo; CMD=""
		fi
		if [ "$CMD" == "back" ] ; then 
			[ $cindex -gt 1 ] && cindex=$(($cindex - 1))
			echo; CMD=""
		fi
		if [ "$CMD" == "jump" ] ; then 
			cindex=$(($cindex + 1))
			echo; CMD=""
		fi
		if [ "$CMD" == "exit" ] ; then 
			echo "KSHELL_CINDEX=$cindex" > $TMPCINDEXFILE
			echo; clean_and_exit 0
		fi
		if [ "$CMD" == "exit-reset-index" ] ; then
			[ -f $TMPCINDEXFILE ] && rm $TMPCINDEXFILE
			echo; clean_and_exit 0
		fi
		if [ ! -z "$CMD" ]; then
 			echo; echo $CMD > $TMPEXFILE; chmod +x $TMPEXFILE
 			$TMPEXFILE ;
			if [ $? -eq 0 ] ; then 
				hindex=$(($hindex + 1))
				echo -e "${hindex}\t${CMD}" >> $TMPHISTORY
			fi
		fi
		echo -n -e $KSHELL_PROMPT ;  echo -n " " 
		get_cmdline
		CMD="$GETCMD"
 	done
	return 0 
}

#
# MAIN
#

[ -f $TMPCINDEXFILE ] && source $TMPCINDEXFILE
[ ! -f $TMPHISTORY ] && touch $TMPHISTORY

usage="usage kshell [-f filename] [-z] [-h]"
while getopts ":f:zh" o; do
	case ${o} in
		f)
			KSHELL_CMDLSTFILE=$OPTARG
			;;
		z)
			KSHELL_CINDEX=1
			;;
		h)
			print_help
			clean_and_exit 0
			;;
                *)
			echo "Error unknown option: $usage" 255
			clean_and_exit 1
			;;
                esac
done
shift $((OPTIND-1))

[ -z $KSHELL_CMDLSTFILE ] && KSHELL_CMDLSTFILE=${DIRNAME}/kshell-listcmd.txt

if [ ! -f $KSHELL_CMDLSTFILE ]; then
	echo "ERROR: KSHELL_CMDLSTFILE: $KSHELL_CMDLSTFILE no such file"
	clean_and_exit 0
fi

[ -z $KSHELL_CINDEX ] && KSHELL_CINDEX=1
cindex=$KSHELL_CINDEX

while [ true ] ; do
        run_loop
	CMD=`head -$cindex $KSHELL_CMDLSTFILE | tail +$cindex`
 	run_print "$CMD"
	cindex=$(($cindex + 1))
done

[ -f $TMPCINDEXFILE ] && rm $TMPCINDEXFILE

clean_and_exit 0
